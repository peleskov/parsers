<?php
/**
 * –°–±–æ—Ä —Ç–æ–≤–∞—Ä–æ–≤ —Å Skinport –∏—Å–ø–æ–ª—å–∑—É—è categories.json –∏ –≤–µ—Å–∞
 */

// ========== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ==========
$TOTAL_ITEMS = 6000; // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Å–±–æ—Ä–∞

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—É–∫–∏ –∏–∑ —Ñ–∞–π–ª–∞
$cookiesData = json_decode(file_get_contents('cookies.json'), true);
if (!$cookiesData) {
    die("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ cookies.json\n");
}

function fetchViaCurl($url, $cookieData) {
    $cookies = $cookieData['cookies'];
    $userAgent = $cookieData['user_agent'];
    
    $command = "curl '$url' " .
        "-H 'accept: */*' " .
        "-H 'accept-language: ru-RU,ru;q=0.8' " .
        "-H 'cookie: $cookies' " .
        "-H 'priority: u=1, i' " .
        "-H 'referer: https://skinport.com/ru/market' " .
        "-H 'sec-ch-ua: \"Not)A;Brand\";v=\"8\", \"Chromium\";v=\"138\", \"Brave\";v=\"138\"' " .
        "-H 'sec-ch-ua-mobile: ?0' " .
        "-H 'sec-ch-ua-platform: \"Windows\"' " .
        "-H 'sec-fetch-dest: empty' " .
        "-H 'sec-fetch-mode: cors' " .
        "-H 'sec-fetch-site: same-origin' " .
        "-H 'sec-gpc: 1' " .
        "-H 'user-agent: $userAgent' " .
        "--compressed 2>/dev/null";
    
    $response = shell_exec($command);
    return $response;
}

function fetchWithRetry($url, $cookieData, $maxRetries = 5) {
    for ($attempt = 1; $attempt <= $maxRetries; $attempt++) {
        $response = fetchViaCurl($url, $cookieData);
        
        if ($response) {
            $data = json_decode($response, true);
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤
            if ($data && isset($data['success']) && $data['success'] === false && isset($data['message']) && $data['message'] === 'RATE_LIMIT_REACHED') {
                $sleepTime = $attempt * 60; // 1 –º–∏–Ω—É—Ç–∞, 2 –º–∏–Ω—É—Ç—ã, 3 –º–∏–Ω—É—Ç—ã –∏ —Ç.–¥.
                echo "  ‚ö†Ô∏è –õ–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ (–ø–æ–ø—ã—Ç–∫–∞ $attempt/$maxRetries). –û–∂–∏–¥–∞–Ω–∏–µ $sleepTime —Å–µ–∫—É–Ω–¥...\\n";
                sleep($sleepTime);
                continue;
            }
            
            return $response;
        } else {
            echo "  ‚ö†Ô∏è –ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç (–ø–æ–ø—ã—Ç–∫–∞ $attempt/$maxRetries)\\n";
            if ($attempt < $maxRetries) {
                sleep(30); // –ñ–¥–µ–º 30 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ –ø—Ä–∏ –ø—É—Å—Ç–æ–º –æ—Ç–≤–µ—Ç–µ
            }
        }
    }
    
    echo "  ‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ ($maxRetries). –û—Å—Ç–∞–Ω–æ–≤–∫–∞.\\n";
    return false; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º false –≤–º–µ—Å—Ç–æ exit –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–∞
}

function getItemDescription($appid, $url, $version, $cookieData) {
    $apiUrl = "https://skinport.com/api/item?appid=$appid&url=$url";
    if ($version) {
        $apiUrl .= "&version=" . urlencode($version);
    }
    
    $response = fetchWithRetry($apiUrl, $cookieData);
    if ($response) {
        $data = json_decode($response, true);
        if ($data && isset($data['data']['item']['description'])) {
            return $data['data']['item']['description'];
        }
    }
    return '';
}

function loadCategories() {
    $categoriesFile = 'categories.json';
    if (!file_exists($categoriesFile)) {
        die("–§–∞–π–ª $categoriesFile –Ω–µ –Ω–∞–π–¥–µ–Ω!\n");
    }
    
    $categories = json_decode(file_get_contents($categoriesFile), true);
    if (!$categories) {
        die("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è $categoriesFile\n");
    }
    
    return $categories;
}

function loadProgress($progressFile) {
    if (file_exists($progressFile)) {
        $progress = json_decode(file_get_contents($progressFile), true);
        if ($progress) {
            echo "‚úì –ó–∞–≥—Ä—É–∂–µ–Ω –ø—Ä–æ–≥—Ä–µ—Å—Å: –∫–∞—Ç–µ–≥–æ—Ä–∏—è {$progress['current_category']}, —Å–æ–±—Ä–∞–Ω–æ {$progress['total_collected']} —Ç–æ–≤–∞—Ä–æ–≤\\n";
            return $progress;
        }
    }
    return [
        'current_category' => 0,
        'total_collected' => 0,
        'categories_progress' => []
    ];
}

function saveProgress($progressFile, $progress) {
    file_put_contents($progressFile, json_encode($progress, JSON_PRETTY_PRINT));
}

function getCategoryFileName($categoryInfo) {
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é results –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    $resultsDir = 'results';
    if (!is_dir($resultsDir)) {
        mkdir($resultsDir, 0755, true);
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —á–∏—Å—Ç–æ–µ –∏–º—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ñ–∞–π–ª–∞
    $categoryName = $categoryInfo['category'];
    // –£–±–∏—Ä–∞–µ–º –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –¥–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    $categoryName = preg_replace('/[^a-zA-Z0-9_-]/', '_', $categoryName);
    return "$resultsDir/result_{$categoryName}.json";
}

function calculateItemsPerCategory($categories, $totalItems) {
    $distribution = [];
    
    foreach ($categories as $category) {
        $itemsCount = (int)($totalItems * $category['weight']);
        if ($itemsCount > 0) {
            // –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL
            $urlParts = parse_url($category['url']);
            parse_str($urlParts['query'], $params);
            
            $distribution[] = [
                'name' => $category['name'],
                'appid' => $params['appid'] ?? 730,
                'category' => $params['cat'] ?? '',
                'items_needed' => $itemsCount
            ];
        }
    }
    
    // –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    $currentTotal = array_sum(array_column($distribution, 'items_needed'));
    if ($currentTotal < $totalItems && !empty($distribution)) {
        $distribution[0]['items_needed'] += $totalItems - $currentTotal;
    }
    
    return $distribution;
}

// ========== –û–°–ù–û–í–ù–û–ô –ö–û–î ==========

echo "üöÄ –°–±–æ—Ä —Ç–æ–≤–∞—Ä–æ–≤ —Å Skinport –∏—Å–ø–æ–ª—å–∑—É—è categories.json\n";
echo "–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: $TOTAL_ITEMS\n";
echo "–†–µ–∂–∏–º: –ë–ï–ó –ø—Ä–æ–∫—Å–∏ (–ø—Ä—è–º–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ)\n";

// –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∫—É–∫–∏
$validCookies = array_values(array_filter($cookiesData, function($cookie) {
    return !empty($cookie['cookies']);
}));

if (empty($validCookies)) {
    die("‚ùå –ù–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∫—É–∫–∏ –≤ cookies.json! –î–æ–±–∞–≤—å—Ç–µ –∫—É–∫–∏ –∏–∑ –±—Ä–∞—É–∑–µ—Ä–æ–≤.\n");
}

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π —Ä–∞–±–æ—á–∏–π –Ω–∞–±–æ—Ä –∫—É–∫–∏
$currentCookie = $validCookies[0];
echo "–ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—É–∫–∏: {$currentCookie['name']}\n";
echo "User-Agent: " . substr($currentCookie['user_agent'], 0, 50) . "...\n\n";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
$categories = loadCategories();
echo "‚úì –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: " . count($categories) . "\n";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
$progressFile = 'progress.json';
$progress = loadProgress($progressFile);

// –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
$distribution = calculateItemsPerCategory($categories, $TOTAL_ITEMS);

echo "\n–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:\n";
foreach ($distribution as $item) {
    echo "  {$item['name']}: {$item['items_needed']} —Ç–æ–≤–∞—Ä–æ–≤\n";
}
echo "\n" . str_repeat("=", 60) . "\n\n";

echo "üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n";
$totalProcessed = $progress['total_collected'];

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∞—á–∏–Ω–∞—è —Å —Ç–µ–∫—É—â–µ–π
foreach ($distribution as $categoryIndex => $categoryInfo) {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if ($categoryIndex < $progress['current_category']) {
        echo "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {$categoryInfo['name']}\n";
        continue;
    }
    
    echo "üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {$categoryInfo['name']} (–Ω—É–∂–Ω–æ: {$categoryInfo['items_needed']})\n";
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    $categoryFile = getCategoryFileName($categoryInfo);
    echo "  üíæ –§–∞–π–ª: $categoryFile\n";
    
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–ª—è —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    $collectedItems = 0;
    $skip = 0; // –ù–∞—á–∏–Ω–∞–µ–º —Å 0, –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±–µ–∑ skip
    $isFirstItem = true;
    
    if ($categoryIndex == $progress['current_category'] && isset($progress['categories_progress'][$categoryIndex])) {
        $collectedItems = $progress['categories_progress'][$categoryIndex]['collected'];
        $skip = $progress['categories_progress'][$categoryIndex]['skip'];
        echo "  ‚Ü©Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å: —Å–æ–±—Ä–∞–Ω–æ $collectedItems, skip $skip\n";
    }
    
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    if ($collectedItems > 0 && file_exists($categoryFile)) {
        // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–æ–∑–∞–ø–∏—Å—å –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
        $fileHandle = fopen($categoryFile, 'r+');
        if (!$fileHandle) {
            die("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –¥–ª—è –¥–æ–∑–∞–ø–∏—Å–∏: $categoryFile\n");
        }
        // –ü–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–æ–π
        fseek($fileHandle, -2, SEEK_END); // –£–±–∏—Ä–∞–µ–º \n]
        $isFirstItem = false;
    } else {
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ñ–∞–π–ª
        $fileHandle = fopen($categoryFile, 'w');
        if (!$fileHandle) {
            die("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏: $categoryFile\n");
        }
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞—á–∞–ª–æ JSON –º–∞—Å—Å–∏–≤–∞
        fwrite($fileHandle, "[\n");
        $isFirstItem = true;
    }
    
    // –°–æ–±–∏—Ä–∞–µ–º —Ç–æ–≤–∞—Ä—ã –ø–æ–∫–∞ –Ω–µ –Ω–∞–±–µ—Ä–µ–º –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
    while ($collectedItems < $categoryInfo['items_needed']) {
        if ($skip == 0) {
            $url = "https://skinport.com/api/browse/{$categoryInfo['appid']}?cat={$categoryInfo['category']}";
        } else {
            $url = "https://skinport.com/api/browse/{$categoryInfo['appid']}?cat={$categoryInfo['category']}&skip=$skip";
        }
        echo "  –ó–∞–ø—Ä–æ—Å: $url\n";
        
        $response = fetchWithRetry($url, $currentCookie);
        
        if ($response === false) {
            echo "  ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ. –û—Å—Ç–∞–Ω–æ–≤–∫–∞.\\n";
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            fwrite($fileHandle, "\\n]");
            fclose($fileHandle);
            exit(1);
        }
        
        if ($response) {
            $data = json_decode($response, true);
            
            if ($data && isset($data['items']) && count($data['items']) > 0) {
                $items = $data['items'];
                $remainingNeeded = $categoryInfo['items_needed'] - $collectedItems;
                
                // –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
                $itemsToProcess = array_slice($items, 0, $remainingNeeded);
                
                echo "  ‚úì –ü–æ–ª—É—á–µ–Ω–æ: " . count($items) . " —Ç–æ–≤–∞—Ä–æ–≤, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: " . count($itemsToProcess) . "\n";
                
                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π —Ç–æ–≤–∞—Ä
                foreach ($itemsToProcess as $index => $item) {
                    echo "    –¢–æ–≤–∞—Ä " . ($collectedItems + $index + 1) . "/{$categoryInfo['items_needed']}: " . ($item['name'] ?? 'Unknown') . "\n";
                    
                    // –ü–æ–ª—É—á–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
                    $description = '';
                    if (!empty($item['url'])) {
                        $description = getItemDescription(
                            $item['appid'] ?? 730,
                            $item['url'],
                            $item['version'] ?? '',
                            $currentCookie
                        );
                        sleep(rand(5, 8)); // –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∑–∞ –æ–ø–∏—Å–∞–Ω–∏–µ–º 5-8 —Å–µ–∫
                    }
                    
                    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
                    $itemData = [
                        'market_hash_name' => $item['marketHashName'] ?? '',
                        'currency' => $item['currency'] ?? '',
                        'image_original_url' => !empty($item['image']) ? 'https://community.cloudflare.steamstatic.com/economy/image/' . $item['image'] : '',
                        'price' => ($item['salePrice'] ?? 0) / 100,
                        'source_url' => !empty($item['url']) ? 'https://skinport.com/ru/item/' . $item['url'] : '',
                        'category' => $item['category_localized'] ?? $item['category'] ?? '',
                        'name' => $item['family_localized'] ?? $item['name'] ?? '',
                        'text' => $item['text'] ?? '',
                        'description' => $description,
                        'crumbs' => [$item['category_localized'] ?? $item['category'] ?? ''],
                        'tags' => array_filter([
                            $item['exterior_localized'] ?? $item['exterior'] ?? '',
                            $item['category_localized'] ?? $item['category'] ?? '',
                            $item['rarity_localized'] ?? $item['rarity'] ?? '',
                            $item['type_localized'] ?? $item['type'] ?? ''
                        ]),
                        'id' => hash('sha256', json_encode($item))
                    ];
                    
                    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä –≤ —Ñ–∞–π–ª
                    if (!$isFirstItem) {
                        fwrite($fileHandle, ",\n");
                    }
                    fwrite($fileHandle, json_encode($itemData, JSON_UNESCAPED_UNICODE));
                    $isFirstItem = false;
                    $totalProcessed++;
                }
                
                $collectedItems += count($itemsToProcess);
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
                $progress['current_category'] = $categoryIndex;
                $progress['total_collected'] = $totalProcessed;
                $progress['categories_progress'][$categoryIndex] = [
                    'collected' => $collectedItems,
                    'skip' => $skip + 1
                ];
                saveProgress($progressFile, $progress);
                
                // –ï—Å–ª–∏ —Å–æ–±—Ä–∞–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                if ($collectedItems >= $categoryInfo['items_needed']) {
                    break;
                }
                
                // –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –º–µ–Ω—å—à–µ 50 —Ç–æ–≤–∞—Ä–æ–≤ - –±–æ–ª—å—à–µ –Ω–µ—Ç
                if (count($items) < 50) {
                    echo "  ‚ö†Ô∏è –î–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü –∫–∞—Ç–µ–≥–æ—Ä–∏–∏\n";
                    break;
                }
                
                $skip += 1;
                // –ó–∞–¥–µ—Ä–∂–∫–∞ –Ω–µ –Ω—É–∂–Ω–∞ - –æ–ø–∏—Å–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ —É–∂–µ –¥–∞—é—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω—É—é –ø–∞—É–∑—É
            } else {
                echo "  ‚ö†Ô∏è –ù–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤ –≤ –æ—Ç–≤–µ—Ç–µ\n";
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
                if ($response) {
                    echo "  üìÑ –ù–∞—á–∞–ª–æ –æ—Ç–≤–µ—Ç–∞: " . substr($response, 0, 200) . "...\n";
                } else {
                    echo "  üìÑ –û—Ç–≤–µ—Ç –ø—É—Å—Ç–æ–π\n";
                }
                break;
            }
        } else {
            echo "  ‚ùå –û—à–∏–±–∫–∞ curl\n";
            break;
        }
    }
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    fwrite($fileHandle, "\n]");
    fclose($fileHandle);
    
    echo "‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: —Å–æ–±—Ä–∞–Ω–æ $collectedItems —Ç–æ–≤–∞—Ä–æ–≤\n";
    echo "üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ $categoryFile\n\n";
}

// –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
if (file_exists($progressFile)) {
    unlink($progressFile);
    echo "‚úì –§–∞–π–ª –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ —É–¥–∞–ª–µ–Ω\n";
}

echo "üéâ –°–±–æ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω! –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: $totalProcessed\n";
echo "üíæ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º\n";
echo "üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –∏–º–ø–æ—Ä—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ñ–∞–π–ª–∞\n";